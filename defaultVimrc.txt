set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)


" All of your Plugins must be added before the following line:
call vundle#end()            " required
filetype plugin indent on    " required

"Areas where split should occour:
set splitbelow
set splitright

"split navigations:
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable folding:
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar:
nnoremap <space> za

Plugin 'tmhedberg/SimpylFold'

"docstrings for folded code:
let g:SimpylFold_docstring_preview=1

" PEP8 configurations:
au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set fileformat=unix

"Fix auto indent:
Plugin 'vim-scripts/indentpython.vim'

"Flag whitespaces:
highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

"Set encoding:
set encoding=utf-8

"autocomplete for python
Bundle 'Valloric/YouCompleteMe'

"Explore code definition
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

"python with virtualenv support

python3 << EOF

import os
import sys
if 'VIRTUAL_ENV' in os.environ:
	project_base_dir = os.environ['VIRTUAL_ENV']
	activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
	execfile(activate_this, dict(__file__=activate_this))
EOF

"Syntax checking and highlighting
Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
let python_highlight_all=1
syntax on

"graphical scheme
Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'

if has('gui_running')
	set background=dark
	colorscheme solarized
else
	colorscheme zenburn
endif
"switch graphical schemes
call togglebg#map("<F5>")


"NERDtree
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'

let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

"Search with Ctrl + p
Plugin 'kien/ctrlp.vim'

"Line Numbering
set nu

"powerline bar
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
